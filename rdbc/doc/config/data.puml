@startuml

!define type(x) <color:blue>x</color>
!define attribute(x) <color:green>x</color>

object global {
    screen
        attribute(\twidth) -> type(int)
        attribute(\theight) -> type(int)
    attribute(inventorysize) -> type(int)
    default
        attribute(\tweapon) -> type(int) (id)
        attribute(\tarmor) -> type(int) (id)
        attribute(\toffhand) -> type(int) (id)
        attribute(\ttrinket) -> type(int) (id)
    trapType (variable)
        attribute(\ttypeA) -> type(int)
        attribute(\ttypeB) -> type(int)
        attribute(\t...)
}

object character {
    health
        attribute(\tmaximum) -> type(int)
        attribute(\tcurrent) -> type(int)
    experiences (variable)
        attribute(\tweaponA) -> type(int)
        attribute(\tweaponB) -> type(int)
        attribute(\t...)
    attribute(speed) -> type(int)
    attribute(weapon) -> type(int) (id)
    attribute(armor) -> type(int) (id)
    attribute(offhand) -> type(int) (id)
    attribute(trinket) -> type(int) (id)
}

object monster {
    health
        attribute(\tmaximum) -> type(int)
        attribute(\tcurrent) -> type(int)
    attribute(weapon) -> type(int) (id)
}

object weapon {
    attribute(id) -> type(int)
    attribute(name) -> type(string)
    attribute(description) -> type(string)
    attribute(value) -> type(int)
    damage (variable)
        attribute(\tblunt) -> type(int)
        attribute(\tslash) -> type(int)
        attribute(\t...)
}

object armor {
    attribute(id) -> type(int)
    attribute(name) -> type(string)
    attribute(description) -> type(string)
    attribute(value) -> type(int)
    resistance (variable)
        attribute(\tblunt) -> type(int)
        attribute(\tslash) -> type(int)
        attribute(\t...)
}

object trinket {
    attribute(id) -> type(int)
    attribute(name) -> type(string)
    attribute(description) -> type(string)
    attribute(value) -> type(int)
    resistance (variable)
        attribute(\tblunt) -> type(int)
        attribute(\tslash) -> type(int)
        attribute(\t...)
    damage (variable)
        attribute(\tblunt) -> type(int)
        attribute(\tslash) -> type(int)
        attribute(\t...)
}

object offhand {
    attribute(id) -> type(int)
    attribute(name) -> type(string)
    attribute(description) -> type(string)
    attribute(value) -> type(int)
    resistance (variable)
        attribute(\tblunt) -> type(int)
        attribute(\tslash) -> type(int)
        attribute(\t...)
    damage (variable)
        attribute(\tblunt) -> type(int)
        attribute(\tslash) -> type(int)
        attribute(\t...)
}

object valuable {
    attribute(id) -> type(int)
    attribute(name) -> type(string)
    attribute(description) -> type(string)
    attribute(value) -> type(int)
}

object inventory {
    items (variable)
        \titemA
            attribute(\t\titemType) -> type(int) (id)
            attribute(\t\tdurability) -> type(int)
            attribute(\t\tequipped) -> type(bool)
        \titemB
            attribute(\t\titemType) -> type(int) (id)
            attribute(\t\tdurability) -> type(int)
            attribute(\t\tequipped) -> type(bool)
        \t...
}

object trap {
    attribute(trapType) -> type(int) (id)
    attribute(name) -> type(string)
    attribute(message) -> type(string)
}

@enduml